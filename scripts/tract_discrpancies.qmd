---
title: "Potential missing tracts in Suffolk county, NY and Uster county, NY"
format: html
editor: visual
---

Dear Census,

We recently encountered an inconsistency in the 2023 5-year county-level datasets for the race-specific household values (001) in tables B11002A-I.

We found that the sum of the tract-level race-specific values is not equal to the county-level values in Suffolk County, NY and Ulster County, NY.

```{r using raw csvs - to be deleted!!!}
library(tidyverse)
# explore the tract level differences 

#ttt= read_csv(file = "~/chrr_measure_calcs/raw_data/ACS/v141_county.csv")
#ccc = read_csv(file = "~/chrr_measure_calcs/raw_data/ACS/v141_county.csv")


#ccc$statecode = stringr::str_pad(ccc$statecode, width = 2,side = "left", pad = "0")
#ccc$countycode = stringr::str_pad(ccc$countycode, width = 3, side = "left", pad = "0")
#ttt$statecode = stringr::str_pad(ttt$statecode, width = 2,side = "left", pad = "0")
#ttt$countycode = stringr::str_pad(ttt$countycode, width = 3, side = "left", pad = "0")




#ccc$btot = ccc$B11002B_001E #county level black pop  
#ccc$wtot = ccc$B11002A_001E #county level white pop 
#ccc$tot = ccc$B11002_001E #total county tot pop 

#ttt$bi = ttt$B11002B_001E #tract level black pop
#ttt$wi = ttt$B11002A_001E #tract level white pop 
#ttt$toti = ttt$B11002_001E #tract level tot pop 


#counties_from_tracts = ttt %>% group_by(statecode, countycode) %>% 
#  summarize(btot = sum(bi, na.rm = TRUE), 
#            wtot = sum(wi, na.rm = TRUE), 
#            tot = sum(toti, na.rm = TRUE))

#both = merge(counties_from_tracts, ccc, by = c("statecode", "countycode"))
#both$needcheck = both$btot.x - both$btot.y


```

```{r using tidycensus for all races }
# Define the ACS variables
acs_vars <- c("B11002A_001", "B11002B_001", "B11002C_001",
              "B11002D_001", "B11002E_001", "B11002F_001",
              "B11002G_001", "B11002H_001", "B11002I_001")

# Define the ACS year and survey
acs_year <- 2023  # Update as needed
acs_survey <- "acs5"

# Get data at the Census Tract level
tract_data <- tidycensus::get_acs(geography = "tract", 
                      variables = acs_vars, 
                      year = acs_year, 
                      survey = acs_survey, 
                      state = "NY", 
                      geometry = FALSE) %>%
  mutate(level = "tract")

# Get data at the County level
county_data <- tidycensus::get_acs(geography = "county", 
                       variables = acs_vars, 
                       year = acs_year, 
                       survey = acs_survey, 
                       state = "NY", 
                       geometry = FALSE) %>%
  mutate(level = "county")

county_data$statecode = substring(county_data$GEOID, 1,2)
county_data$countycode = substring(county_data$GEOID, 3,5)
tract_data$statecode = substring(tract_data$GEOID, 1,2)
tract_data$countycode = substring(tract_data$GEOID, 3,5)


counties_from_tracts <- tract_data %>%
  group_by(statecode, countycode, variable) %>%
  summarize(estimate = sum(estimate, na.rm = TRUE))


both = merge(counties_from_tracts, county_data, by = c("statecode", "countycode", "variable"))

both$diff = both$estimate.x - both$estimate.y
```

```{r print a nice table }
# some formatting 
library(dplyr)
library(stringr)

cleaned_data <- both %>%
  rename(County_value = estimate.y, 
         Sum_of_tracts = estimate.x) %>%
  select(-level) %>%
  mutate(Race = case_when(
    str_sub(variable, -5, -5) == "A" ~ "White Alone",
    str_sub(variable, -5, -5) == "B" ~ "Black Alone",
    str_sub(variable, -5, -5) == "C" ~ "AIAN Alone",
    str_sub(variable, -5, -5) == "D" ~ "Asian Alone",
    str_sub(variable, -5, -5) == "E" ~ "NHOPI Alone",
    str_sub(variable, -5, -5) == "F" ~ "Other",
    str_sub(variable, -5, -5) == "G" ~ "Two or More",
    str_sub(variable, -5, -5) == "H" ~ "Non Hispanic White",
    str_sub(variable, -5, -5) == "I" ~ "Hispanic",
    TRUE ~ NA_character_  # Default to NA if no match is found
  )) %>%
  select(statecode, countycode, Race, County_value, GEOID, NAME, Sum_of_tracts, diff)  # Reorder columns


# Subset the data where diff != 0
subset_data <- cleaned_data[cleaned_data$diff != 0, ]

library(knitr)
library(kableExtra)
# Create a "pretty" table using kable and kableExtra
kable(subset_data, "latex", caption = "Table of Subset Data with diff != 0") %>%
  kable_styling(latex_options = c("striped", "hold_position", "scale_down")) %>%
  column_spec(1, bold = TRUE) %>% # Bold the first column
  row_spec(0, bold = TRUE, background = "#f2f2f2") # Bold and color the header row

# View the cleaned dataset
#head(cleaned_data)

#write.csv(cleaned_data, row.names = FALSE, file = "~/chrr_measure_calcs/tempfiles/all_race_discrepancies.csv")
```
